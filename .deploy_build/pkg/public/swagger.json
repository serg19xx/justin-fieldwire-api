{
  "openapi": "3.0.0",
  "info": {
    "title": "FieldWire API",
    "version": "1.0.0",
    "description": "REST API for FieldWire application"
  },
  "paths": {
    "/api/v1/health": {
      "get": {
        "summary": "Get API health status",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "uptime": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/version": {
      "get": {
        "summary": "Get API version information",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "API version info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "build_date": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/database/tables": {
      "get": {
        "summary": "Get database tables list",
        "tags": [
          "Database"
        ],
        "responses": {
          "200": {
            "description": "Database tables",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "summary": "User login",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "email": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/v1/profile": {
      "get": {
        "summary": "Get user profile",
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "avatar_url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Invalid data"
          }
        }
      }
    },
    "/api/v1/profile/avatar": {
      "post": {
        "summary": "Upload user avatar",
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar uploaded successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Invalid file"
          }
        }
      }
    },
    "/api/v1/profile/work-status": {
      "put": {
        "summary": "Update user work status",
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "isActive"
                ],
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "example": false,
                    "description": "Whether user is active at work"
                  },
                  "inactive_reason": {
                    "type": "string",
                    "example": "vacation",
                    "description": "Reason for inactivity (optional)"
                  },
                  "inactive_reason_details": {
                    "type": "string",
                    "example": "On vacation until next week",
                    "description": "Additional details about inactivity (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Work status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "work_status": {
                          "type": "object",
                          "properties": {
                            "isActive": {
                              "type": "boolean"
                            },
                            "inactive_reason": {
                              "type": "string"
                            },
                            "inactive_reason_details": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/avatar": {
      "get": {
        "summary": "Get user avatar",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar image",
            "content": {
              "image/*": {}
            }
          },
          "404": {
            "description": "Avatar not found"
          }
        }
      }
    },
    "/api/v1/2fa/send-code": {
      "post": {
        "summary": "Send 2FA verification code",
        "tags": [
          "Two-Factor"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "phone"
                ],
                "properties": {
                  "phone": {
                    "type": "string",
                    "example": "+1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code sent successfully"
          },
          "400": {
            "description": "Invalid phone number"
          }
        }
      }
    },
    "/api/v1/2fa/verify-code": {
      "post": {
        "summary": "Verify 2FA code",
        "tags": [
          "Two-Factor"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "phone",
                  "code"
                ],
                "properties": {
                  "phone": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "code": {
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 6,
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code verified successfully"
          },
          "400": {
            "description": "Invalid code"
          }
        }
      }
    },
    "/api/v1/2fa/enable": {
      "post": {
        "summary": "Enable 2FA for user",
        "tags": [
          "Two-Factor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "2FA enabled successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/2fa/disable": {
      "post": {
        "summary": "Disable 2FA for user",
        "tags": [
          "Two-Factor"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "2FA disabled successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/patients": {
      "get": {
        "summary": "Get list of patients",
        "description": "Retrieve a paginated list of patients with optional filtering by country and region",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter by country name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter by region/province name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with patients list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "patients": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "total_pages": {
                              "type": "integer"
                            },
                            "total_items": {
                              "type": "integer"
                            },
                            "items_per_page": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized - Token required"
                    },
                    "error_code": {
                      "type": "integer",
                      "example": 401
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/drivers": {
      "get": {
        "summary": "Get list of drivers",
        "description": "Retrieve a paginated list of drivers with optional filtering by country and region",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter by country name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter by region/province name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with drivers list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "drivers": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "total_pages": {
                              "type": "integer"
                            },
                            "total_items": {
                              "type": "integer"
                            },
                            "items_per_page": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized - Token required"
                    },
                    "error_code": {
                      "type": "integer",
                      "example": 401
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pharmacies": {
      "get": {
        "summary": "Get list of pharmacies",
        "description": "Retrieve a paginated list of pharmacies with optional filtering by country and region",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter by country name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter by region/province name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with pharmacies list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "pharmacies": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "total_pages": {
                              "type": "integer"
                            },
                            "total_items": {
                              "type": "integer"
                            },
                            "items_per_page": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized - Token required"
                    },
                    "error_code": {
                      "type": "integer",
                      "example": 401
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pharmacists": {
      "get": {
        "summary": "Get list of pharmacists",
        "description": "Retrieve a paginated list of pharmacists with optional filtering by country and region",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter by country name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter by region/province name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with pharmacists list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "pharmacists": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "total_pages": {
                              "type": "integer"
                            },
                            "total_items": {
                              "type": "integer"
                            },
                            "items_per_page": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized - Token required"
                    },
                    "error_code": {
                      "type": "integer",
                      "example": 401
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/physicians": {
      "get": {
        "summary": "Get list of physicians",
        "description": "Retrieve a paginated list of physicians with optional filtering by country and region",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter by country name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter by region/province name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with physicians list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "physicians": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "total_pages": {
                              "type": "integer"
                            },
                            "total_items": {
                              "type": "integer"
                            },
                            "items_per_page": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized - Token required"
                    },
                    "error_code": {
                      "type": "integer",
                      "example": 401
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical-clinics": {
      "get": {
        "summary": "Get list of medical clinics",
        "description": "Retrieve a paginated list of medical clinics with optional filtering by country and region",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter by country name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter by region/province name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with medical clinics list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "medical_clinics": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "total_pages": {
                              "type": "integer"
                            },
                            "total_items": {
                              "type": "integer"
                            },
                            "items_per_page": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized - Token required"
                    },
                    "error_code": {
                      "type": "integer",
                      "example": 401
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/geography/countries-regions": {
      "get": {
        "summary": "Get countries and regions",
        "description": "Retrieve a list of countries and their regions/provinces",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with countries and regions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "countries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "regions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized - Token required"
                    },
                    "error_code": {
                      "type": "integer",
                      "example": 401
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workers": {
      "get": {
        "tags": [
          "Workers"
        ],
        "summary": "Get all workers",
        "description": "Retrieve a paginated list of all workers including active and invited users",
        "security": [
          {
            "bearerAuth": {}
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by invitation status: active, invited, registered",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "invited",
                "registered"
              ]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search by name or email",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "integer",
                      "example": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Workers retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "workers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "email": {
                                "type": "string",
                                "example": "worker@example.com"
                              },
                              "first_name": {
                                "type": "string",
                                "example": "John"
                              },
                              "last_name": {
                                "type": "string",
                                "example": "Doe"
                              },
                              "phone": {
                                "type": "string",
                                "example": "+1234567890"
                              },
                              "user_type": {
                                "type": "string",
                                "example": "Employee"
                              },
                              "job_title": {
                                "type": "string",
                                "example": "Developer"
                              },
                              "status": {
                                "type": "integer",
                                "example": 1
                              },
                              "invitation_status": {
                                "type": "string",
                                "example": "active"
                              },
                              "invitation_sent_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "invitation_expires_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "invited_by": {
                                "type": "integer",
                                "nullable": true
                              },
                              "registration_completed_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "last_login": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer",
                              "example": 1
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 20
                            },
                            "total": {
                              "type": "integer",
                              "example": 100
                            },
                            "last_page": {
                              "type": "integer",
                              "example": 5
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "integer",
                      "example": 401
                    },
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/workers/invite": {
      "post": {
        "tags": [
          "Workers"
        ],
        "summary": "Send invitation to worker",
        "description": "Send an invitation email to a new worker with registration link",
        "security": [
          {
            "bearerAuth": {}
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Invitation data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "first_name",
                  "last_name"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "newworker@example.com"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "user_type": {
                    "type": "string",
                    "example": "Employee"
                  },
                  "job_title": {
                    "type": "string",
                    "example": "Developer"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invitation sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "integer",
                      "example": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invitation sent successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "invitation_token": {
                          "type": "string",
                          "example": "abc123..."
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "User with this email already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registration/validate/{token}": {
      "get": {
        "tags": [
          "Registration"
        ],
        "summary": "Validate invitation token",
        "description": "Check if invitation token is valid and not expired",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Invitation token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token validation result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "integer",
                      "example": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is valid"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "valid": {
                          "type": "boolean",
                          "example": true
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "example": "worker@example.com"
                            },
                            "first_name": {
                              "type": "string",
                              "example": "John"
                            },
                            "last_name": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "user_type": {
                              "type": "string",
                              "example": "Employee"
                            },
                            "job_title": {
                              "type": "string",
                              "example": "Developer"
                            }
                          }
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid or expired invitation token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registration/complete": {
      "post": {
        "tags": [
          "Registration"
        ],
        "summary": "Complete registration with invitation",
        "description": "Complete user registration using invitation token and set password",
        "requestBody": {
          "required": true,
          "description": "Registration completion data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "abc123...",
                    "description": "Invitation token"
                  },
                  "password": {
                    "type": "string",
                    "example": "newpassword123",
                    "description": "New password"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+1234567890",
                    "description": "Phone number (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registration completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "integer",
                      "example": 0
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Registration completed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "email": {
                              "type": "string",
                              "example": "worker@example.com"
                            },
                            "first_name": {
                              "type": "string",
                              "example": "John"
                            },
                            "last_name": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "user_type": {
                              "type": "string",
                              "example": "Employee"
                            },
                            "job_title": {
                              "type": "string",
                              "example": "Developer"
                            }
                          }
                        },
                        "token": {
                          "type": "string",
                          "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid token or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "type": "integer",
                      "example": 400
                    },
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid or expired invitation token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "Health check endpoints"
    },
    {
      "name": "Database",
      "description": "Database management endpoints"
    },
    {
      "name": "Authentication",
      "description": "User authentication endpoints"
    },
    {
      "name": "Profile",
      "description": "User profile management endpoints"
    },
    {
      "name": "Two-Factor",
      "description": "Two-factor authentication endpoints"
    },
    {
      "name": "Contacts",
      "description": "Contact management endpoints"
    },
    {
      "name": "Workers",
      "description": "Worker management and invitation system endpoints"
    },
    {
      "name": "Registration",
      "description": "User registration and invitation system endpoints"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
