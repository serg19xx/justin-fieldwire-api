{
  "openapi": "3.0.0",
  "info": {
    "title": "FieldWire API",
    "version": "1.0.0",
    "description": "REST API for FieldWire application"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/v1/health": {
      "get": {
        "summary": "Get API health status",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {"type": "string"},
                    "timestamp": {"type": "string"},
                    "version": {"type": "string"},
                    "uptime": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/version": {
      "get": {
        "summary": "Get API version information",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "API version info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {"type": "string"},
                    "build_date": {"type": "string"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/database/tables": {
      "get": {
        "summary": "Get database tables list",
        "tags": ["Database"],
        "responses": {
          "200": {
            "description": "Database tables",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {"type": "string"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "summary": "User login",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {"type": "string"},
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {"type": "integer"},
                        "email": {"type": "string"},
                        "name": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/v1/profile": {
      "get": {
        "summary": "Get user profile",
        "tags": ["Profile"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "email": {"type": "string"},
                    "name": {"type": "string"},
                    "phone": {"type": "string"},
                    "avatar_url": {"type": "string"}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "tags": ["Profile"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "phone": {"type": "string"},
                  "email": {"type": "string", "format": "email"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Invalid data"
          }
        }
      }
    },
               "/api/v1/profile/avatar": {
             "post": {
               "summary": "Upload user avatar",
               "tags": ["Profile"],
               "security": [{"bearerAuth": []}],
               "requestBody": {
                 "required": true,
                 "content": {
                   "multipart/form-data": {
                     "schema": {
                       "type": "object",
                       "properties": {
                         "avatar": {
                           "type": "string",
                           "format": "binary"
                         }
                       }
                     }
                   }
                 }
               },
               "responses": {
                 "200": {
                   "description": "Avatar uploaded successfully"
                 },
                 "401": {
                   "description": "Unauthorized"
                 },
                 "400": {
                   "description": "Invalid file"
                 }
               }
             }
           },
           "/api/v1/profile/work-status": {
             "put": {
               "summary": "Update user work status",
               "tags": ["Profile"],
               "security": [{"bearerAuth": []}],
               "requestBody": {
                 "required": true,
                 "content": {
                   "application/json": {
                     "schema": {
                       "type": "object",
                       "required": ["isActive"],
                       "properties": {
                         "isActive": {
                           "type": "boolean",
                           "example": false,
                           "description": "Whether user is active at work"
                         },
                         "inactive_reason": {
                           "type": "string",
                           "example": "vacation",
                           "description": "Reason for inactivity (optional)"
                         },
                         "inactive_reason_details": {
                           "type": "string",
                           "example": "On vacation until next week",
                           "description": "Additional details about inactivity (optional)"
                         }
                       }
                     }
                   }
                 }
               },
               "responses": {
                 "200": {
                   "description": "Work status updated successfully",
                   "content": {
                     "application/json": {
                       "schema": {
                         "type": "object",
                         "properties": {
                           "error_code": {"type": "integer"},
                           "status": {"type": "string"},
                           "message": {"type": "string"},
                           "data": {
                             "type": "object",
                             "properties": {
                               "work_status": {
                                 "type": "object",
                                 "properties": {
                                   "isActive": {"type": "boolean"},
                                   "inactive_reason": {"type": "string"},
                                   "inactive_reason_details": {"type": "string"},
                                   "updated_at": {"type": "string", "format": "date-time"}
                                 }
                               }
                             }
                           }
                         }
                       }
                     }
                   }
                 },
                 "400": {
                   "description": "Bad request - invalid data"
                 },
                 "401": {
                   "description": "Unauthorized"
                 },
                 "500": {
                   "description": "Internal server error"
                 }
               }
             }
           },
    "/api/v1/avatar": {
      "get": {
        "summary": "Get user avatar",
        "tags": ["Profile"],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "required": false,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar image",
            "content": {
              "image/*": {}
            }
          },
          "404": {
            "description": "Avatar not found"
          }
        }
      }
    },
    "/api/v1/2fa/send-code": {
      "post": {
        "summary": "Send 2FA verification code",
        "tags": ["Two-Factor"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["phone"],
                "properties": {
                  "phone": {
                    "type": "string",
                    "example": "+1234567890"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code sent successfully"
          },
          "400": {
            "description": "Invalid phone number"
          }
        }
      }
    },
    "/api/v1/2fa/verify-code": {
      "post": {
        "summary": "Verify 2FA code",
        "tags": ["Two-Factor"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["phone", "code"],
                "properties": {
                  "phone": {
                    "type": "string",
                    "example": "+1234567890"
                  },
                  "code": {
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 6,
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code verified successfully"
          },
          "400": {
            "description": "Invalid code"
          }
        }
      }
    },
    "/api/v1/2fa/enable": {
      "post": {
        "summary": "Enable 2FA for user",
        "tags": ["Two-Factor"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "2FA enabled successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/2fa/disable": {
      "post": {
        "summary": "Disable 2FA for user",
        "tags": ["Two-Factor"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "2FA disabled successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "Health check endpoints"
    },
    {
      "name": "Database",
      "description": "Database management endpoints"
    },
    {
      "name": "Authentication",
      "description": "User authentication endpoints"
    },
    {
      "name": "Profile",
      "description": "User profile management endpoints"
    },
    {
      "name": "Two-Factor",
      "description": "Two-factor authentication endpoints"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
