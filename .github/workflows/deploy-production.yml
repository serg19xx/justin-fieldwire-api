name: Deploy to Production (Shared Hosting)

on:
  push:
    branches: [ main, production ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, zip
        
    - name: Install Composer
      uses: php-actions/composer@v1
        
    - name: Install dependencies
      run: composer install --no-dev --optimize-autoloader
        
    - name: Setup production environment
      run: |
        echo "${{ secrets.ENV_FILE }}" > .env
        echo "Production environment configured from ENV_FILE secret"
        
    - name: Create required directories
      run: |
        mkdir -p logs
        mkdir -p public/uploads/avatars
        chmod 755 logs
        chmod 755 public/uploads
        chmod 755 public/uploads/avatars
        
    - name: Run tests
      run: |
        if [ -f "vendor/bin/phpunit" ]; then
          vendor/bin/phpunit --no-coverage
        else
          echo "PHPUnit not available, skipping tests"
        fi
        
    - name: Check code style
      run: |
        if [ -f "vendor/bin/phpcs" ]; then
          vendor/bin/phpcs src --standard=PSR12 || true
        else
          echo "PHPCS not available, skipping code style check"
        fi
        
    - name: Create deployment package
      run: |
        zip -r fieldwire-api-production.zip . \
          -x "*.git*" \
          -x "tests/*" \
          -x "scripts/*" \
          -x "docs/*" \
          -x "*.md" \
          -x "nginx.conf" \
          -x "env.development" \
          -x "env.example" \
          -x "logs/*" \
          -x ".env"
        echo "Deployment package created: fieldwire-api-production.zip"
        
    - name: Deploy to production via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./
        server-dir: ./public_html/
        exclude: |
          **/.git*
          **/tests/
          **/scripts/
          **/docs/
          **/*.md
          **/nginx.conf
          **/env.development
          **/env.example
          **/logs/
          **/.env
        dangerous-clean-slate: false
        
    - name: Deploy .env file separately
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./
        server-dir: ./public_html/
        dangerous-clean-slate: false
        
    - name: Set proper permissions
      run: |
        echo "Setting permissions on server..."
        # This will be handled by the hosting provider
        
    - name: Health check
      run: |
        echo "Waiting for deployment to complete..."
        sleep 30
        
        echo "Testing production endpoints..."
        
        # Test health endpoint
        if curl -f -s "https://fieldwire.medicalcontractor.ca/api/v1/health" > /dev/null; then
          echo "✅ Health check passed"
        else
          echo "❌ Health check failed"
          exit 1
        fi
        
        # Test Swagger UI
        if curl -f -s "https://fieldwire.medicalcontractor.ca/docs" > /dev/null; then
          echo "✅ Swagger UI accessible"
        else
          echo "❌ Swagger UI not accessible"
          exit 1
        fi
        
        echo "🎉 Deployment successful!"
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "🚀 Deployment to production successful!"
          echo "🌐 Production URL: https://fieldwire.medicalcontractor.ca"
          echo "📚 Swagger UI: https://fieldwire.medicalcontractor.ca/docs"
          echo "🔍 Health Check: https://fieldwire.medicalcontractor.ca/api/v1/health"
        else
          echo "❌ Deployment failed!"
          exit 1
        fi
