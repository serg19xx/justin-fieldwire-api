name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, curl, zip
        coverage: none
        
    - name: Install Composer
      uses: ramsey/composer-install@v2
      with:
        composer-options: '--no-dev --optimize-autoloader'
        
    - name: Create production archive
      run: |
        tar --exclude='.git' --exclude='node_modules' --exclude='tests' --exclude='*.log' --exclude='.env' --exclude='fieldwire-api-production.tar.gz' -czf fieldwire-api-production.tar.gz .
        
    - name: Create .env file
      run: |
        cp env.production .env
        
    - name: Deploy to server via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./
        server-dir: /home/yjyhtqh8/fwapi.medicalcontractor.ca/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/tests/**
          **/*.log
          **/fieldwire-api-production.tar.gz
          **/env.development
          **/env.example
          **/DEPLOYMENT.md
          **/ENVIRONMENT.md
          **/QUICK_DEPLOY.md
          **/PRODUCTION_DEPLOY.md
          **/DEPLOY_INSTRUCTIONS.txt
          **/DEPLOY_NEXT_STEPS.txt
          **/nginx.conf
          **/phpcs.xml
          **/phpstan.neon
          **/phpunit.xml
          **/ftp-upload.txt
          **/deploy-on-server.sh
          
    - name: Setup server via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/yjyhtqh8/fwapi.medicalcontractor.ca
          
          echo "üì¶ Installing dependencies..."
          composer install --no-dev --optimize-autoloader
          
          echo "üìÅ Creating required directories..."
          mkdir -p logs public/uploads
          
          echo "üîí Setting permissions..."
          chmod 644 .env
          chmod 755 logs public/uploads scripts/*.sh
          
          echo "üóÑÔ∏è Setting up database..."
          composer db:setup
          
          echo "üßπ Cleaning up..."
          rm -f fieldwire-api-production.tar.gz
          
          echo "‚úÖ Deployment completed!"
          
    - name: Test deployment
      run: |
        echo "üß™ Testing deployment..."
        sleep 10
        
        # Test health endpoint
        HEALTH_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://fwapi.medicalcontractor.ca/api/v1/health)
        if [ "$HEALTH_RESPONSE" = "200" ]; then
          echo "‚úÖ Health endpoint working (HTTP $HEALTH_RESPONSE)"
        else
          echo "‚ùå Health endpoint failed (HTTP $HEALTH_RESPONSE)"
          exit 1
        fi
        
        # Test database endpoint
        DB_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://fwapi.medicalcontractor.ca/api/v1/database/tables)
        if [ "$DB_RESPONSE" = "200" ]; then
          echo "‚úÖ Database endpoint working (HTTP $DB_RESPONSE)"
        else
          echo "‚ùå Database endpoint failed (HTTP $DB_RESPONSE)"
          exit 1
        fi
        
        echo "üéâ All tests passed!"
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Deployment successful!"
          echo "üåê API is live at: https://fwapi.medicalcontractor.ca"
          echo "üìã Endpoints:"
          echo "   ‚Ä¢ Health: https://fwapi.medicalcontractor.ca/api/v1/health"
          echo "   ‚Ä¢ Version: https://fwapi.medicalcontractor.ca/api/v1/version"
          echo "   ‚Ä¢ Database: https://fwapi.medicalcontractor.ca/api/v1/database/tables"
          echo "   ‚Ä¢ Docs: https://fwapi.medicalcontractor.ca/api/docs"
        else
          echo "‚ùå Deployment failed!"
        fi
